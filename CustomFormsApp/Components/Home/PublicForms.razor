@using CustomFormsApp.Data.Models
@using CustomFormsApp.Services
@using Microsoft.Extensions.Localization
@inject IFormService FormService
@inject NavigationManager NavigationManager
@inject ILogger<PublicForms> Logger
@inject IStringLocalizer<PublicForms> Localizer

<div class="public-forms-section mb-5">
    @if (isLoading)
    {
        <div class="text-center p-3">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-warning" role="alert">
             <i class="bi bi-exclamation-triangle me-2"></i> @Localizer["CouldNotLoadForms"] @errorMessage
        </div>
    }
    else if (publicForms == null || !publicForms.Any())
    {
        <div class="text-center p-4 border rounded bg-light">
            <i class="bi bi-clipboard-check display-4 text-muted mb-3 d-block"></i>
            <p class="text-muted">@Localizer["NoPublicFormsAvailable"]</p>
            <p class="small text-muted">Create a form and make it public to see it here!</p>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var form in publicForms)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@form.Name</h5>
                            @if (!string.IsNullOrWhiteSpace(form.Description))
                            {
                                <p class="card-text text-muted small mb-3">@form.Description</p>
                            }
                            <div class="mt-auto d-flex justify-content-end">
                                <button class="btn btn-sm btn-primary" @onclick="() => FillForm(form.Id)">
                                    <i class="bi bi-pencil-square me-1"></i> Fill Out
                                </button>
                            </div>
                        </div>
                        <div class="card-footer text-muted small">
                            Created: @form.CreatedDate.ToLocalTime().ToString("g")
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public int Count { get; set; } = 6; // Default number of forms to show

    private List<Form>? publicForms;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        errorMessage = null;
        try
        {
            var forms = await FormService.GetPublicFormsAsync(Count);
            publicForms = forms.ToList();
            Logger.LogInformation("Loaded {Count} public forms", publicForms.Count);
            
            // Log form details for debugging
            foreach (var form in publicForms)
            {
                Logger.LogInformation("Public Form: Id={Id}, Name='{Name}', Description='{Description}'", 
                    form.Id, form.Name, form.Description);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading public forms component.");
            errorMessage = "An unexpected error occurred."; // Keep error message generic for public view
        }
        finally
        {
            isLoading = false;
        }
    }

    private void FillForm(int formId)
    {
        // Navigate to the form filling page
        NavigationManager.NavigateTo($"/forms/fill/{formId}");
    }
}