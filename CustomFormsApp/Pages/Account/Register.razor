@page "/Account/Register"
@using Microsoft.AspNetCore.Components.Web
@using CustomFormsApp.Services
@inject ClerkAuthService ClerkAuth
@inject NavigationManager NavigationManager
@inject ILogger<Register> Logger
@inject ICurrentUserService CurrentUserService
@layout AccountLayout

<PageTitle>Register - IsaacForms</PageTitle>

<div class="text-center mt-5">
    <h3>Redirecting...</h3>
    <div class="spinner-border mt-3" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Wait for Clerk to be ready
            await ClerkAuth.WaitForInitializationAsync();
            
            // Check if user is already authenticated
            if (ClerkAuth.IsAuthenticated || CurrentUserService.IsAuthenticated())
            {
                // User is already signed in, redirect to home or return URL
                var destination = string.IsNullOrEmpty(ReturnUrl) ? "/" : ReturnUrl;
                Logger.LogInformation("User is already authenticated. Redirecting to {Destination}", destination);
                NavigationManager.NavigateTo(destination);
                return;
            }
            
            // Open sign up directly instead of redirecting to login page
            await ClerkAuth.OpenSignUp(ReturnUrl);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to redirect to sign up");
            // Fall back to the login page
            NavigationManager.NavigateTo($"/Account/Login?ReturnUrl={Uri.EscapeDataString(ReturnUrl ?? "/")}", true);
        }
    }
}